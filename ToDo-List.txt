1. Complete about/acknowledgements. 
2. Update credits about/license.md
3. Update editions in index.md when the online version of Python book becomes avavailable. 
4. Update authors in index.md
5. Update wiredcommunication.md so that Exercise 1 becomes a main task, and instructions are given for it. 
6. Update all chapters so that there is a link for solutions.
7. Broadcast: Add SendNumberOrString.py to the repository under the code folder
8. Group Communication: Implement Exercise using IETF RFC 3927 using link-local address selection. Group leaders set-up address, and invite others.
Assumption: Common group for organisation. 
Basic algorithm: 
. Select a random address addr between 1 and 255
. Pick a random 0 - PROBE_WAIT seconds.
. For   PROBE_NUM times
    . Ask if addr is taken
    . Wait randomly between PROBE_MIN and PROBE_MAX
    . If receives a response or receives another probe for the same address, back off. Start from step 1.
. If nothing is received during this time, then claim address.
9. ShakeyDonkey: Try to debug timing problems better.
10. Unicast - both codes do not check if the receiver is the intended receiver. Need to be fixed. 
11. Two way unicast: Codes need to be fixed so intended receiver checks are done. Sender code can be improved for the radio.receive part. Merge all Ping_Receiver and Ping_sender code for a single program that can do the full Ping proram (send pings, respond to pings, calculate RTT)
12. Two way unicast: Improve the program for Exercise 1 so that it starts with counter 10, on button press: count down, do ping, measure RTT, update statistics, if reached 0, display average, reset counter to 10. This way, it is possible to avoid too many while loops. This code also needs to do the Pong bit, and check senders as in comment 11.  
